@model DishUp.Models.SupplierViewModel

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Custom.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

<style>
    .box-header {
        margin-bottom: 6%;
    }
</style>


<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title" style="float:left">New Supplier</h3>
                <h3 style="float:right" class="box-title">
                    @Html.ActionLink("Back to Supplier List", "Index", "", new { @class = "btn btn-primary" })
                </h3>
            </div>
            @using (Html.BeginForm("Create", "Supplier",FormMethod.Post ,new { @class = "needs-validation" , @novalidate= "novalidate" }))
            {
                @Html.AntiForgeryToken()

                <div class="box-body">
                    @Html.HiddenFor(x => x.IS_FROM_USER)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Company Name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @* @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })*@
                                <div class="invalid-feedback">
                                    Please choose company name.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Rep. Name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.SURNAME, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @*@Html.ValidationMessageFor(model => model.SURNAME, "", new { @class = "text-danger" })*@
                                <div class="invalid-feedback">
                                    Please provide surname.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Landline Number", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MOBILE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.MOBILE_NUMBER, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Mobile Number", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PHONE_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                                @*@Html.ValidationMessageFor(model => model.PHONE_NUMBER, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @*@Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })*@
                                <div class="invalid-feedback">
                                    Please provide email.
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("Delivery Days", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DELIVERY_DAYS, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @*@Html.ValidationMessageFor(model => model.DELIVERY_DAYS, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>


                    <div class="form-group" style="display:none;">
                        @Html.LabelFor(model => model.OPEN_HOURS, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OPEN_HOURS, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OPEN_HOURS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none;">
                        @Html.LabelFor(model => model.ABN_NUMBER, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ABN_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ABN_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="display:none">
                        @Html.LabelFor(model => model.ACN_NUMBER, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ACN_NUMBER, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ACN_NUMBER, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Add Supplier" class="btn btn-success" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        });
    </script>
}
